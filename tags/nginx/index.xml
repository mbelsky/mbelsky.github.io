<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nginx on Max Belsky — a software developer and music lover</title>
    <link>https://www.mbelsky.com/tags/nginx/</link>
    <description>Recent content in nginx on Max Belsky — a software developer and music lover</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Feb 2021 16:26:02 +0300</lastBuildDate><atom:link href="https://www.mbelsky.com/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Serve React applicaiton with Nginx in k8s</title>
      <link>https://www.mbelsky.com/notes/react-nginx-k8s/</link>
      <pubDate>Sun, 28 Feb 2021 16:26:02 +0300</pubDate>
      
      <guid>https://www.mbelsky.com/notes/react-nginx-k8s/</guid>
      <description>A few things I&amp;rsquo;ve learned after deploying React application + nginx in Kubernetes.
nobody user To run a process as non-root you don&amp;rsquo;t need create a user in your docker image. Just use the nobody:
docker run --user=&amp;#34;nobody&amp;#34; nginx read-only container To succesfully run a read only container with nginx don&amp;rsquo;t forget to pass some volumes:
docker run --read-only --tmpfs &amp;#34;/var/cache/nginx&amp;#34; --tmpfs &amp;#34;/run&amp;#34; --rm nginx-react-app In k8s add volumes and use them as the container&amp;rsquo;s volumeMounts.</description>
    </item>
    
  </channel>
</rss>
